// Define motor pins
const int motor1Pin1 = 3;
const int motor1Pin2 = 4;
const int motor2Pin1 = 5;
const int motor2Pin2 = 6;
const int enable1Pin = 9;
const int enable2Pin = 10;

// Ultrasonic sensor pins
const int trigPin = 11;
const int echoPin = 12;

// Variables
long duration;
int distance;

void setup() {
  // Set motor pins as outputs
  pinMode(motor1Pin1, OUTPUT);
  pinMode(motor1Pin2, OUTPUT);
  pinMode(motor2Pin1, OUTPUT);
  pinMode(motor2Pin2, OUTPUT);
  pinMode(enable1Pin, OUTPUT);
  pinMode(enable2Pin, OUTPUT);

  // Set ultrasonic sensor pins
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  // Initialize serial monitor
  Serial.begin(9600);
}

void loop() {
  // Measure distance
  distance = getDistance();

  if (distance < 20) {
    // Obstacle detected, stop and turn
    stopMotors();
    delay(500);
    turnRight();
    delay(1000);
  } else {
    // No obstacle, move forward
    moveForward();
  }

  delay(100);
}

// Function to move forward
void moveForward() {
  analogWrite(enable1Pin, 150);
  analogWrite(enable2Pin, 150);
  digitalWrite(motor1Pin1, HIGH);
  digitalWrite(motor1Pin2, LOW);
  digitalWrite(motor2Pin1, HIGH);
  digitalWrite(motor2Pin2, LOW);
}

// Function to stop motors
void stopMotors() {
  digitalWrite(motor1Pin1, LOW);
  digitalWrite(motor1Pin2, LOW);
  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, LOW);
}

// Function to turn right
void turnRight() {
  analogWrite(enable1Pin, 150);
  analogWrite(enable2Pin, 150);
  digitalWrite(motor1Pin1, HIGH);
  digitalWrite(motor1Pin2, LOW);
  digitalWrite(motor2Pin1, LOW);
  digitalWrite(motor2Pin2, HIGH);
}

// Function to get distance from ultrasonic sensor
int getDistance() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  duration = pulseIn(echoPin, HIGH);
  int distance = duration * 0.034 / 2; // Convert to cm
  Serial.print("Distance: ");
  Serial.println(distance);
  return distance;
}
